@inject HttpClient Http
@inject PageInfoService pageInfoService;
@page "/"
@using LIT.Smabu.Client.Services;
@using LIT.Smabu.Shared.Dashboards;

<PageTitle>Smabu</PageTitle>

<AuthorizeView>
    <Authorized>
        @if(this.model != null)
        {
            <MudContainer MaxWidth="MaxWidth.False">
                <MudGrid>
                    <MudItem xs="12" md="12" lg="6">
                        <MudCard>
                            <MudCardContent>
                                <MudText Typo="Typo.h6">Umsatzstärkste Kunden</MudText>
                                <MudList>
                                    <MudListItem Avatar="@Icons.Material.Filled.LooksOne">
                                        @model.BestSalesCustomer1Name @model.BestSalesCustomer1Value
                                    </MudListItem>
                                    <MudListItem Avatar="@Icons.Material.Filled.LooksTwo">
                                        @model.BestSalesCustomer2Name @model.BestSalesCustomer2Value
                                    </MudListItem>
                                    <MudListItem Avatar="@Icons.Material.Filled.Looks3">
                                        @model.BestSalesCustomer3Name @model.BestSalesCustomer3Value
                                    </MudListItem>
                                </MudList>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" md="6" lg="3" Class="d-flex">
                        <MudCard Class="flex-1">
                            <MudCardContent>
                                <MudText Typo="Typo.h6">Aktuelle Umsätze</MudText>
                                <MudList>
                                    <MudListItem>
                                        <b>3 Monate</b> @model.Sales3Month
                                    </MudListItem>
                                    <MudListItem>
                                        <b>6 Monate</b> @model.Sales6Month
                                    </MudListItem>
                                    <MudListItem>
                                        <b>12 Monate</b> @model.Sales12Month
                                    </MudListItem>
                                </MudList>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" md="6" lg="3" Class="d-flex">
                        <MudCard Class="flex-1">
                            <MudCardContent>
                                <MudText Typo="Typo.h6">Gesamtumsatz</MudText>
                                <MudList>
                                    <MudListItem>
                                        <b>Total</b> @model.TotalSales
                                    </MudListItem>
                                    <MudListItem>
                                        <b>@(DateTime.Now.Year)</b> @model.SalesCurrentYear
                                    </MudListItem>
                                    <MudListItem>
                                        <b>@(DateTime.Now.Year - 1)</b> @model.SalesLastYear
                                    </MudListItem>
                                </MudList>
                            </MudCardContent>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="6">
                        <MudGrid>
                            <MudItem xs="12">
                                <MudCard Elevation="1">
                                    <MudCardContent>
                                        <MudText>Story of the day</MudText>
                                        <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                                    </MudCardContent>
                                    <MudCardActions>
                                        <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
                                    </MudCardActions>
                                </MudCard>
                            </MudItem>
                            <MudItem xs="12">
                                <MudCard Elevation="1">
                                    <MudCardContent>
                                        <MudText>Story of the day</MudText>
                                        <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                                    </MudCardContent>
                                    <MudCardActions>
                                        <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
                                    </MudCardActions>
                                </MudCard>
                            </MudItem>
                        </MudGrid>
                    </MudItem>
                    <MudItem xs="12" sm="6" Class="d-flex">
                        <MudCard Elevation="1" Class="flex-1">
                            <MudCardContent>
                                <MudText>Story of the day</MudText>
                                <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4">
                        <MudCard>
                            <MudCardContent>
                                <MudText>Offene Rechnungen</MudText>
                                <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4">
                        <MudCard>
                            <MudCardContent>
                                <MudText>Story of the day</MudText>
                                <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" sm="12" md="4">
                        <MudCard>
                            <MudCardContent>
                                <MudText>Story of the day</MudText>
                                <MudText Typo="Typo.body2">The quick, brown fox jumps over a lazy dog.</MudText>
                            </MudCardContent>
                            <MudCardActions>
                                <MudButton Variant="Variant.Text" Color="Color.Primary">Learn More</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                </MudGrid>
            </MudContainer>
        }
    </Authorized>
    <NotAuthorized>
        <MudStack>
            <MudText Typo="Typo.h4">Willkommen!</MudText>
            <MudText Typo="Typo.body1">Bitte einloggen</MudText>
        </MudStack>
    </NotAuthorized>
</AuthorizeView>

@code {
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }

    public HomeDashboardDTO model;

    protected override async Task OnInitializedAsync()
    {
        this.pageInfoService.ShowBusyOverlay();
        var authenticationState = await authenticationStateTask;
        if (authenticationState?.User?.Identity?.IsAuthenticated ?? false)
        {
            await TempImportAsync();
            this.model = await Http.GetFromJsonAsync<HomeDashboardDTO>("home/dashboard") ?? throw new Exception("NotFound");
        }
        this.pageInfoService.HideBusyOverlay();
    }

    private async Task TempImportAsync()
    {
        try
        {
            var customer = await Http.PostAsync("home/import", null) ?? throw new Exception("NotFound");
        }
        catch (Exception)
        {

        }
    }
}