@page "/offers"
@using LIT.Smabu.Domain.Shared.Common;
@using LIT.Smabu.Shared.Offers;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@inject HttpClient Http
@inject PageInfoService pageInfoService;
@attribute [Authorize]


<MudContainer>
    <MudStack Row Justify="Justify.SpaceBetween">
         <MudText Typo="Typo.h4">Angebote</MudText>
         <MudButtonGroup>
             <MudButton Href="/offers/create" StartIcon="@Icons.Material.Filled.Add">Neu</MudButton>
         </MudButtonGroup>
     </MudStack>

     <MudDataGrid Items="@offers" Groupable="false">
         <Columns>
             <PropertyColumn Property="x => x.Number.ToShortString()" Title="#" Groupable="false" />
             <PropertyColumn Property="x => x.OfferDate" Title="Datum" />
             <PropertyColumn Property="x => x.Customer.Name" Title="Kunde">
             </PropertyColumn>
             <PropertyColumn Property="x => (Currency.GetEuro().Format(x.Amount))" SortBy="x => x.Amount" Title="Summe" Groupable="false" CellStyle="text-align: right" />
             <TemplateColumn Groupable="false" CellStyle="text-align: right">
                 <CellTemplate>
                     <MudStack Row AlignItems="AlignItems.End" Justify="Justify.FlexEnd">
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Href="@($"/offers/{context.Item.Id}")" Color="@Color.Default" Size="Size.Small" title="Öffnen"></MudIconButton>
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Href="@($"/offers/{context.Item.Id}/delete")" Color="@Color.Error" Size="Size.Small" title="Löschen"></MudIconButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</MudContainer>

@code {
    @inject NavigationManager NavigationManager;
    private OfferDTO[]? offers;

    protected override async Task OnInitializedAsync()
    {
        this.pageInfoService.ShowBusyOverlay();
        try
        {
            offers = await Http.GetFromJsonAsync<OfferDTO[]>("Offers");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        finally
        {
            this.pageInfoService.HideBusyOverlay();
        }
    }
}