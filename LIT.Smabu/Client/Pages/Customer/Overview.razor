@page "/customers"
@using LIT.Smabu.Domain.Shared.Common;
@using LIT.Smabu.Shared.Common;
@using LIT.Smabu.Shared.Customers;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@inject HttpClient Http
@inject PageInfoService pageInfoService;
@attribute [Authorize]

<MudContainer>
    <MudStack Row Justify="Justify.SpaceBetween">
        <MudText Typo="Typo.h6">Kunden</MudText>
        <MudButtonGroup>
            <MudButton Href="/customers/create" StartIcon="@Icons.Material.Filled.Add">Neu</MudButton>
        </MudButtonGroup>
    </MudStack>

    <MudDataGrid Items="@customers">
        <Columns>
            <PropertyColumn Property="x => x.Number.ToLongString()" Title="#" />
            <PropertyColumn Property="x => x.Name" Title="Name" />
            <PropertyColumn Property="x => x.IndustryBranch" Title="Branch" />
            <PropertyColumn Property="x => x.MainAddress.City" Title="Stadt" />
            <PropertyColumn Property="x => (Currency.GetEuro().Format(x.TotalSales))" SortBy="x => x.TotalSales" Title="Umsatz" CellStyle="text-align: right" />

            <TemplateColumn>
                <CellTemplate>
                    <MudStack Row>
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Href="@($"/customers/{context.Item.Id}")" Color="@Color.Default" Size="Size.Small" title="Öffnen"></MudIconButton>
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Href="@($"/customers/{context.Item.Id}/delete")" Color="@Color.Error" Size="Size.Small" title="Löschen"></MudIconButton>
                    </MudStack>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</MudContainer>


@code {
    @inject NavigationManager NavigationManager;
    private CustomerDTO[]? customers;

    protected override async Task OnInitializedAsync()
    {
        this.pageInfoService.ShowBusyOverlay();
        try
        {
            customers = await Http.GetFromJsonAsync<CustomerDTO[]>("Customers");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        finally
        {
            this.pageInfoService.HideBusyOverlay();
        }
    }
}