@page "/customers"
@using LIT.Smabu.Domain.Shared.Common;
@using LIT.Smabu.Shared.Customers;
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication; 
@inject HttpClient Http
@attribute [Authorize]

<PageHeader PageTitle="Kunden">
    <Actions>
        <a class="btn btn-sm oi oi-plus" href="/customers/create" title="Neu"></a>
    </Actions>
</PageHeader>

@if (customers == null)
{
    <p><em>Loading...</em></p>
}
else if (customers.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>#</th>
                <th>Name</th>
                <th>Branche</th>
                <th>Stadt</th>
                <th>Umsatz</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.Number.ToLongString()</td>
                    <td>@customer.Name</td>
                    <td>@customer.IndustryBranch</td>
                    <td>@customer.MainAddress.City</td>
                    <td style="text-align:right">@Currency.GetEuro().Format(@customer.TotalSales)</td>
                    <td class="btn-group btn-group-sm">
                        <a class="btn btn-sm oi oi-pencil" title="Öffnen" href="@($"/customers/{customer.Id}")"></a>
                        <a class="btn btn-sm oi oi-trash" title="Löschen" href="@($"/customers/{customer.Id}/delete")"></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p><em>Keine Daten</em></p>
}

@code {
    @inject NavigationManager NavigationManager;
    private CustomerDTO[]? customers;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            customers = await Http.GetFromJsonAsync<CustomerDTO[]>("Customers");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}